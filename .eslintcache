[{"E:\\E Drive Sharing\\react_assignment\\src\\index.js":"1","E:\\E Drive Sharing\\react_assignment\\src\\reportWebVitals.js":"2","E:\\E Drive Sharing\\react_assignment\\src\\App.js":"3","E:\\E Drive Sharing\\react_assignment\\src\\components\\common\\header.js":"4","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\hero.js":"5","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\about.js":"6","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Credientials\\logout.js":"7","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Credientials\\login.js":"8","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Patient\\addPatient.js":"9","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Dashboard\\Doctor\\doctors-dashboard.js":"10","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Dashboard\\Patient\\patient-dashboard.js":"11","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Patient\\changePassword.js":"12","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\notFound.js":"13"},{"size":455,"mtime":1611826290597,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1741,"mtime":1611823941118,"results":"17","hashOfConfig":"15"},{"size":1655,"mtime":1611824007346,"results":"18","hashOfConfig":"15"},{"size":1831,"mtime":1611821331292,"results":"19","hashOfConfig":"15"},{"size":2074,"mtime":1611821628995,"results":"20","hashOfConfig":"15"},{"size":201,"mtime":1611826163505,"results":"21","hashOfConfig":"15"},{"size":3461,"mtime":1611826168199,"results":"22","hashOfConfig":"15"},{"size":5482,"mtime":1611843891867,"results":"23","hashOfConfig":"15"},{"size":8744,"mtime":1611832752008,"results":"24","hashOfConfig":"15"},{"size":4054,"mtime":1611824690117,"results":"25","hashOfConfig":"15"},{"size":4002,"mtime":1611843786757,"results":"26","hashOfConfig":"15"},{"size":184,"mtime":1611823353361,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"17cnc3o",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"E:\\E Drive Sharing\\react_assignment\\src\\index.js",[],["57","58"],"E:\\E Drive Sharing\\react_assignment\\src\\reportWebVitals.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\App.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\common\\header.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\hero.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\about.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Credientials\\logout.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Credientials\\login.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Patient\\addPatient.js",["59","60"],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Dashboard\\Doctor\\doctors-dashboard.js",["61","62","63","64"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Table, Input, InputNumber, Popconfirm, Form, Typography, Button, Space } from \"antd\";\r\nimport axios from \"axios\";\r\nconst { Search } = Input;\r\n\r\n\r\nvar password=\"\";\r\nconst EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const inputNode = inputType === \"number\" ? <InputNumber /> : <Input />;\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Please Input ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  );\r\n};\r\n\r\nconst DoctorDashboard = () => {\r\n  // var password=\"\";\r\n  const [form] = Form.useForm();\r\n  const [data, setData] = useState();\r\n  const [editingKey, setEditingKey] = useState(\"\");\r\n  let history = useHistory();\r\n  \r\n  // const searchResult = [];\r\n  if (!localStorage.getItem(\"login\")){\r\n    history.push(\"/login\");\r\n    \r\n  }\r\n  useEffect(() => {\r\n    loadUser();\r\n  }, []);\r\n  \r\n\r\n  const getpatient = async () => {\r\n    \r\n    var patientDetails=[]; \r\n    await axios.get(`http://localhost:3003/patient/`).then(response =>{\r\n      response.data.forEach(element => {\r\n        let item = {};\r\n        item[\"id\"] = element.id;\r\n        item[\"email\"] = element.email;\r\n        item[\"password\"] = element.password;\r\n        item[\"firstName\"] = element.firstName;\r\n        item[\"lastName\"] = element.lastName;\r\n        item[\"phone\"] = element.phone;\r\n        item[\"address\"] = element.address;\r\n        item[\"city\"] = element.city;\r\n        item[\"state\"] = element.state;\r\n        item[\"country\"] = element.country;\r\n        item[\"pincode\"] = element.pincode;\r\n        let diagnosis = \"\";\r\n        let prescribed_medication = \"\";\r\n        element.diagnosis.forEach(value => {\r\n          diagnosis += diagnosis === \"\" ? value : \",\" + value;\r\n        });\r\n        element.prescribed_medication.forEach(value => {\r\n          prescribed_medication += prescribed_medication === \"\" ? value : \",\" + value;\r\n        });\r\n        item[\"diagnosis\"] = diagnosis;\r\n        item[\"prescribed_medication\"] = prescribed_medication;\r\n        password = element.password;\r\n        \r\n        patientDetails.push(item);\r\n        \r\n      });\r\n    });\r\n\r\n    return patientDetails;\r\n  }\r\n\r\n  const loadUser = async () => {\r\n      getpatient().then(value => {\r\n        setData(value);\r\n      });\r\n  };\r\n\r\n  \r\n  const onSearch = async value => {\r\n    value = value.toLowerCase();\r\n    getpatient().then(products => {\r\n      setData(products.filter(product => \r\n        product.firstName.toLowerCase().includes(value) || \r\n        product.lastName.toLowerCase().includes(value) || \r\n        product.diagnosis.toLowerCase().includes(value) || \r\n        product.prescribed_medication.toLowerCase().includes(value)\r\n        ));\r\n    });\r\n  };\r\n\r\n  const isEditing = (record) => record.id === editingKey;\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      email: \"\",\r\n      password: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      phone: \"\",\r\n      diagnosis: \"\",\r\n      prescribed_medication:\"\",\r\n      address: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      country: \"\",\r\n      pincode: \"\",\r\n      ...record,\r\n    });\r\n    setEditingKey(record.id);\r\n  };\r\n\r\n  const cancel = () => {\r\n    setEditingKey(\"\");\r\n  };\r\n\r\n  const deleteUser = async id => {\r\n    await axios.delete(`http://localhost:3003/patient/${id}`);\r\n    loadUser();\r\n  };\r\n  const save = async (id) => {\r\n    try {\r\n      const row = await form.validateFields();\r\n      const newData = [...data];\r\n      const index = newData.findIndex((item) => id === item.id);\r\n\r\n      if (index > -1) {\r\n        const element = newData[index];\r\n        \r\n        let item = {\r\n          diagnosis: [],\r\n          prescribed_medication: [],\r\n          password: password\r\n        };\r\n        item.diagnosis = row.diagnosis.split(',');\r\n        item.prescribed_medication = row.prescribed_medication.split(',');\r\n        item[\"email\"] = row.email;\r\n        item[\"firstName\"] = row.firstName;\r\n        item[\"lastName\"] = row.lastName;\r\n        item[\"phone\"] = row.phone;\r\n        item[\"address\"] = row.address;\r\n        item[\"city\"] = row.city;\r\n        item[\"state\"] = row.state;\r\n        item[\"country\"] = row.country;\r\n        item[\"pincode\"] = row.pincode;\r\n        item[\"password\"] = password;\r\n\r\n        newData.splice(index, 1, { ...element, ...row });\r\n        setData(newData);\r\n\r\n        await axios.put(`http://localhost:3003/patient/${id}`, item);\r\n        setEditingKey(\"\");\r\n      } else {\r\n        newData.push(row);\r\n        setData(newData);\r\n        setEditingKey(\"\");\r\n      }\r\n    } catch (errInfo) {\r\n      console.log(\"Validate Failed:\", errInfo);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      title: \"Email\",\r\n      dataIndex: \"email\",\r\n      width: \"15%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"First Name\",\r\n      dataIndex: \"firstName\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Last Name\",\r\n      dataIndex: \"lastName\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Phone\",\r\n      dataIndex: \"phone\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Diagnosis\",\r\n      dataIndex: \"diagnosis\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Prescribed Medication\",\r\n      dataIndex: \"prescribed_medication\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Address\",\r\n      dataIndex: \"address\",\r\n      width: \"15%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"City\",\r\n      dataIndex: \"city\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"State\",\r\n      dataIndex: \"state\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Country\",\r\n      dataIndex: \"country\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Pin Code\",\r\n      dataIndex: \"pincode\",\r\n      width: \"10%\",\r\n      editable: true,\r\n    },\r\n    {\r\n      title: \"Operation\",\r\n      dataIndex: \"operation\",\r\n      render: (_, record) => {\r\n        const editable = isEditing(record);\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              href=\"javascript:;\"\r\n              onClick={() => save(record.id)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              Save\r\n            </a>\r\n            <Popconfirm title=\"Sure to cancel?\" onConfirm={cancel}>\r\n              <a>Cancel</a>\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Space direction=\"horizontal\">\r\n          <Typography.Link\r\n            disabled={editingKey !== \"\"}\r\n            onClick={() => edit(record)}\r\n          >\r\n            Edit\r\n          </Typography.Link>\r\n          <Typography.Link\r\n          onClick={() => deleteUser(record.id)}\r\n          >Delete</Typography.Link>\r\n          </Space>\r\n        )\r\n      },\r\n    },\r\n  ];\r\n  const mergedColumns = columns.map((col) => {\r\n    if (!col.editable) {\r\n      return col;\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.dataIndex,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        editing: isEditing(record),\r\n      }),\r\n    };\r\n  });\r\n  return (\r\n    <div className=\"block contactBlock\">\r\n      <div className=\"container-fluid table\">\r\n        <div className=\"titleHolder\">\r\n          <h2>Welcome to Our Portal</h2>\r\n          <p>Dolore nam rerum obcaecati fugit odio nobis Molestiae rerum</p>\r\n        </div>\r\n        <div>\r\n        <Search placeholder=\"Diagnosis, Prescribed Medication and Name\" style={{ width: 380 }} allowClear onSearch={onSearch} enterButton />\r\n        <Button type=\"primary\" href=\"/dashboard/doctor/add\" className=\"add-patient\" size=\"large\"><i className=\"fas fa-user\" style={{ marginRight:'8px' }}></i>Add Patient</Button>\r\n        </div>\r\n        <Form form={form} component={false}>\r\n          <Table\r\n            components={{\r\n              body: {\r\n                cell: EditableCell,\r\n              },\r\n            }}\r\n            bordered\r\n            dataSource={data}\r\n            columns={mergedColumns}\r\n            rowClassName=\"editable-row\"\r\n            pagination={{\r\n              onChange: cancel,\r\n            }}\r\n          />\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorDashboard;\r\n","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Dashboard\\Patient\\patient-dashboard.js",["65"],"import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card } from \"antd\";\r\nimport { List, Divider } from \"antd\";\r\n\r\n\r\nfunction PatientDashboard() {\r\n  let history = useHistory();\r\n\r\n  if (!localStorage.getItem(\"login\")){\r\n    history.push(\"/login\");\r\n  }\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    phone: \"\",\r\n    diagnosis: \"\",\r\n    prescribed_medication: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: \"\",\r\n    country: \"\",\r\n    pincode: \"\",\r\n  });\r\n\r\n  \r\n  useEffect(() => {\r\n    loadUsers();\r\n  }, []);\r\n\r\n  var patientData = JSON.parse(localStorage.getItem(\"login\"));\r\n\r\n  const loadUsers = async () => {\r\n    await axios.get(\"http://localhost:3003/patient\").then(result =>{\r\n    result.data.forEach((element) => {\r\n      if (element.email === patientData.email) {\r\n        let item = {};\r\n        item[\"id\"] = element.id;\r\n        item[\"email\"] = element.email;\r\n        item[\"password\"] = element.password;\r\n        item[\"firstName\"] = element.firstName;\r\n        item[\"lastName\"] = element.lastName;\r\n        item[\"phone\"] = element.phone;\r\n        item[\"address\"] = element.address;\r\n        item[\"city\"] = element.city;\r\n        item[\"state\"] = element.state;\r\n        item[\"country\"] = element.country;\r\n        item[\"pincode\"] = element.pincode;\r\n        let diagnosis = \"\";\r\n        let prescribed_medication = \"\";\r\n        element.diagnosis.forEach(value => {\r\n          diagnosis += diagnosis === \"\" ? value : \", \" + value;\r\n        });\r\n        element.prescribed_medication.forEach(value => {\r\n          prescribed_medication += prescribed_medication === \"\" ? value : \", \" + value;\r\n        });\r\n        item[\"diagnosis\"] = diagnosis;\r\n        item[\"prescribed_medication\"] = prescribed_medication;\r\n        setUser(item);\r\n        return true;\r\n      }\r\n    });\r\n  });\r\n    }\r\n\r\n  var data = [\r\n    {\r\n\r\n    \r\n      email: user.email,\r\n      password: user.password,\r\n      firstName: user.firstName,\r\n      lastName: user.lastName,\r\n      phone: user.phone,\r\n      diagnosis: user.diagnosis,\r\n      prescribed_medication:user.prescribed_medication,\r\n      address: user.address,\r\n      city: user.city,\r\n      state: user.state,\r\n      country:user.country,\r\n      pincode: user.pincode,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div id=\"contact\" className=\"block contactBlock\">\r\n      <div className=\"container-fluid\">\r\n        <div className=\"titleHolder\">\r\n          <h2>Welcome to Our Portal</h2>\r\n          <p>Dolore nam rerum obcaecati fugit odio nobis Molestiae rerum</p>\r\n        </div>\r\n        <Button type=\"primary\" href=\"/dashboard/patient/change-password\" className=\"add-patient\" size=\"large\"><i className=\"fas fa-key\" style={{ marginRight:'8px' }}></i>Change Password</Button>\r\n        <Divider orientation=\"center\">Patient's Details</Divider>\r\n        <List\r\n          size=\"small\"\r\n          header={<div>Hey {user.firstName}, Hope you r doing well. Please contact to your doctor for updating your information.</div>}\r\n          bordered\r\n          dataSource={data}\r\n          renderItem={(item) => (\r\n            <List.Item>\r\n              <Card className=\"patientCard\" title={item.firstName.toUpperCase()}>\r\n                <p>Email      : {item.email}</p>\r\n                <p>First Name : {item.firstName}</p>\r\n                <p>Last Name  : {item.lastName}</p>\r\n                <p>Phone      : {item.phone}</p>\r\n                <p>Diagnosis  : {item.diagnosis}</p>\r\n                <p>Prescribed Medication : {item.prescribed_medication}</p>\r\n                <p>Address    : {item.address}</p>\r\n                <p>City       : {item.city}</p>\r\n                <p>State      : {item.state}</p>\r\n                <p>Country    : {item.country}</p>\r\n                <p>Pincode    : {item.pincode}</p>\r\n              </Card>\r\n            </List.Item>\r\n          )}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n    \r\n  \r\n}\r\n\r\nexport default PatientDashboard;\r\n","E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\Patient\\changePassword.js",[],"E:\\E Drive Sharing\\react_assignment\\src\\components\\home\\notFound.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":4,"column":31,"nodeType":"72","messageId":"73","endLine":4,"endColumn":42},{"ruleId":"70","severity":1,"message":"74","line":14,"column":10,"nodeType":"72","messageId":"73","endLine":14,"endColumn":14},{"ruleId":"75","severity":1,"message":"76","line":58,"column":6,"nodeType":"77","endLine":58,"endColumn":8,"suggestions":"78"},{"ruleId":"79","severity":1,"message":"80","line":262,"column":13,"nodeType":"81","endLine":268,"endColumn":14},{"ruleId":"82","severity":1,"message":"83","line":263,"column":20,"nodeType":"84","messageId":"85","endLine":263,"endColumn":34},{"ruleId":"79","severity":1,"message":"86","line":272,"column":15,"nodeType":"81","endLine":272,"endColumn":18},{"ruleId":"75","severity":1,"message":"87","line":32,"column":6,"nodeType":"77","endLine":32,"endColumn":8,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'InputNumber' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadUser'. Either include it or remove the dependency array.","ArrayExpression",["91"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'loadUsers'. Either include it or remove the dependency array.",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [loadUser]",{"range":"97","text":"98"},"Update the dependencies array to be: [loadUsers]",{"range":"99","text":"100"},[1283,1285],"[loadUser]",[670,672],"[loadUsers]"]